/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-05-18 13:49:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.system.logInfo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class logInfoManager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String path = request.getContextPath();

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>日志管理</title>\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("    <meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/layui/css/layui.css\" media=\"all\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/css/public.css\" media=\"all\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/layui_ext/dtree/font/dtreefont.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"childrenBody\">\r\n");
      out.write("\r\n");
      out.write("<!-- 搜索条件开始 -->\r\n");
      out.write("<fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 20px;\">\r\n");
      out.write("    <legend>查询条件</legend>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<form class=\"layui-form\" method=\"post\" id=\"searchFrm\">\r\n");
      out.write("    <div class=\"layui-form-item\">\r\n");
      out.write("        <div class=\"layui-inline\">\r\n");
      out.write("            <label class=\"layui-form-label\">登陆名称:</label>\r\n");
      out.write("            <div class=\"layui-input-inline\" style=\"padding: 5px\">\r\n");
      out.write("                <input type=\"text\" name=\"loginname\" autocomplete=\"off\" class=\"layui-input layui-input-inline\"\r\n");
      out.write("                       placeholder=\"请输入登陆名称\" style=\"height: 30px;border-radius: 10px\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-inline\">\r\n");
      out.write("            <label class=\"layui-form-label\">登陆IP:</label>\r\n");
      out.write("            <div class=\"layui-input-inline\" style=\"padding: 5px\">\r\n");
      out.write("                <input type=\"text\" name=\"loginip\" autocomplete=\"off\" class=\"layui-input layui-input-inline\"\r\n");
      out.write("                       placeholder=\"请输入登陆IP\" style=\"height: 30px;border-radius: 10px\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-inline\">\r\n");
      out.write("            <label class=\"layui-form-label\">开始时间:</label>\r\n");
      out.write("            <div class=\"layui-input-inline\" style=\"padding: 5px\">\r\n");
      out.write("                <input type=\"text\" name=\"startTime\" id=\"startTime\" readonly=\"readonly\" class=\"layui-input layui-input-inline\"\r\n");
      out.write("                       placeholder=\"yyyy-MM-dd\" style=\"height: 30px;border-radius: 10px\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-inline\">\r\n");
      out.write("            <label class=\"layui-form-label\">结束时间:</label>\r\n");
      out.write("            <div class=\"layui-input-inline\" style=\"padding: 5px\">\r\n");
      out.write("                <input type=\"text\" name=\"endTime\" id=\"endTime\" readonly=\"readonly\" class=\"layui-input layui-input-inline\"\r\n");
      out.write("                       placeholder=\"yyyy-MM-dd\" style=\"height: 30px;border-radius: 10px\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"layui-inline\" style=\"margin-left: 50px\">\r\n");
      out.write("            <button type=\"button\" class=\"layui-btn layui-btn-normal layui-icon layui-icon-search layui-btn-radius layui-btn-sm\" id=\"doSearch\">查询</button>\r\n");
      out.write("            <button type=\"reset\" class=\"layui-btn layui-btn-warm layui-icon layui-icon-refresh layui-btn-radius layui-btn-sm\">重置</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<!-- 数据表格开始 -->\r\n");
      out.write("<table class=\"layui-hide\" id=\"logInfoTable\" lay-filter=\"logInfoTable\"></table>\r\n");
      out.write("<div style=\"display: none;\" id=\"logInfoToolBar\">\r\n");
      out.write("    <button type=\"button\" class=\"layui-btn layui-btn-danger layui-btn-sm layui-btn-radius\" lay-event=\"deleteBatch\">批量删除</button>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"logInfoBar\" style=\"display: none;\">\r\n");
      out.write("    <a class=\"layui-btn layui-btn-danger layui-btn-xs layui-btn-radius\" lay-event=\"del\">删除</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print(path);
      out.write("/static/layui/layui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var tableIns;\r\n");
      out.write("    layui.use(['jquery', 'layer', 'form', 'table','laydate'], function () {\r\n");
      out.write("        var $ = layui.jquery;\r\n");
      out.write("        var layer = layui.layer;\r\n");
      out.write("        var form = layui.form;\r\n");
      out.write("        var table = layui.table;\r\n");
      out.write("        var laydate = layui.laydate;\r\n");
      out.write("\r\n");
      out.write("        //渲染时间\r\n");
      out.write("        laydate.render({\r\n");
      out.write("            elem:'#startTime',\r\n");
      out.write("            type:'datetime'\r\n");
      out.write("        });\r\n");
      out.write("        laydate.render({\r\n");
      out.write("            elem:'#endTime',\r\n");
      out.write("            type:'datetime'\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //渲染数据表格\r\n");
      out.write("        tableIns = table.render({\r\n");
      out.write("            elem: '#logInfoTable'   //渲染的目标对象\r\n");
      out.write("            , url: '");
      out.print(path);
      out.write("/logInfo/loadAllLogInfo.action' //数据接口\r\n");
      out.write("            , title: '用户数据表'//数据导出来的标题\r\n");
      out.write("            , toolbar: \"#logInfoToolBar\"   //表格的工具条\r\n");
      out.write("            , height: 'full-190'\r\n");
      out.write("            , cellMinWidth: 100 //设置列的最小默认宽度\r\n");
      out.write("            , page: true  //是否启用分页\r\n");
      out.write("            , cols: [[   //列表数据\r\n");
      out.write("                {type: 'checkbox', fixed: 'left'}\r\n");
      out.write("                , {field: 'id', title: 'ID', align: 'center'}\r\n");
      out.write("                , {field: 'loginname', title: '登陆名称', align: 'center'}\r\n");
      out.write("                , {field: 'loginip', title: '登陆IP', align: 'center'}\r\n");
      out.write("                , {field: 'logintime', title: '登陆时间', align: 'center'}\r\n");
      out.write("                , {fixed: 'right', title: '操作', toolbar: '#logInfoBar', align: 'center'}\r\n");
      out.write("            ]],\r\n");
      out.write("            done:function (data, curr, count) {\r\n");
      out.write("                //不是第一页时，如果当前返回的数据为0那么就返回上一页\r\n");
      out.write("                if(data.data.length==0&&curr!=1){\r\n");
      out.write("                    tableIns.reload({\r\n");
      out.write("                        page:{\r\n");
      out.write("                            curr:curr-1\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        //模糊查询\r\n");
      out.write("        $(\"#doSearch\").click(function () {\r\n");
      out.write("            var params = $(\"#searchFrm\").serialize();\r\n");
      out.write("            //alert(params);\r\n");
      out.write("            tableIns.reload({\r\n");
      out.write("                url: \"");
      out.print(path);
      out.write("/logInfo/loadAllLogInfo.action?\" + params,\r\n");
      out.write("                page:{curr:1}\r\n");
      out.write("            })\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //监听头部工具栏事件\r\n");
      out.write("        table.on(\"toolbar(logInfoTable)\", function (obj) {\r\n");
      out.write("            switch (obj.event) {\r\n");
      out.write("                case 'deleteBatch':\r\n");
      out.write("                    deleteBatch();\r\n");
      out.write("                    break;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //监听行工具事件\r\n");
      out.write("        table.on('tool(logInfoTable)', function (obj) {\r\n");
      out.write("            var data = obj.data; //获得当前行数据\r\n");
      out.write("            var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）\r\n");
      out.write("            if (layEvent === 'del') { //删除\r\n");
      out.write("                layer.confirm('真的删除【' + data.loginname + '】这个日志么？', function (index) {\r\n");
      out.write("                    //向服务端发送删除指令\r\n");
      out.write("                    $.post(\"");
      out.print(path);
      out.write("/logInfo/deleteLogInfo.action\", {id: data.id}, function (res) {\r\n");
      out.write("                        layer.msg(res.msg);\r\n");
      out.write("                        //刷新数据表格\r\n");
      out.write("                        tableIns.reload();\r\n");
      out.write("                    })\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        //批量删除\r\n");
      out.write("        function deleteBatch() {\r\n");
      out.write("            //得到选中的数据行\r\n");
      out.write("            var checkStatus = table.checkStatus('logInfoTable');\r\n");
      out.write("            var data = checkStatus.data;\r\n");
      out.write("            var params=\"\";\r\n");
      out.write("            $.each(data,function(i,item){\r\n");
      out.write("                if (i==0){\r\n");
      out.write("                    params+=\"ids=\"+item.id;\r\n");
      out.write("                }else{\r\n");
      out.write("                    params+=\"&ids=\"+item.id;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            layer.confirm('真的要删除这些日志么？', function (index) {\r\n");
      out.write("                //向服务端发送删除指令\r\n");
      out.write("                $.post(\"");
      out.print(path);
      out.write("/logInfo/deleteBatchLogInfo.action\",params, function (res) {\r\n");
      out.write("                    layer.msg(res.msg);\r\n");
      out.write("                    //刷新数据表格\r\n");
      out.write("                    tableIns.reload();\r\n");
      out.write("                })\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
