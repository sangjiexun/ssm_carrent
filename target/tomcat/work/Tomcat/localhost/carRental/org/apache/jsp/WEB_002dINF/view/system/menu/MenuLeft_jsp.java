/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-05-18 13:49:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.system.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class MenuLeft_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

	String path = request.getContextPath();
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <html>\r\n");
      out.write("    <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>菜单树</title>\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("    <meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("    <link rel=\"icon\" href=\"favicon.ico\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/layui/css/layui.css\" media=\"all\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/css/public.css\" media=\"all\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/layui_ext/dtree/dtree.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/static/layui_ext/dtree/font/dtreefont.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    <body class=\"main_body\">\r\n");
      out.write("\r\n");
      out.write("    <ul id=\"menuTree\" class=\"dtree\" data-id=\"0\"></ul>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.print(path);
      out.write("/static/layui/layui.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    var menuTree;\r\n");
      out.write("    layui.extend({\r\n");
      out.write("    dtree: '");
      out.print(path);
      out.write("/static/layui_ext/dist/dtree'\r\n");
      out.write("    }).use(['jquery', 'layer', 'form', 'dtree'], function () {\r\n");
      out.write("    var $ = layui.jquery;\r\n");
      out.write("    var layer = layui.layer;\r\n");
      out.write("    var form = layui.form;\r\n");
      out.write("    var dtree = layui.dtree;\r\n");
      out.write("\r\n");
      out.write("    // 初始化树\r\n");
      out.write("    menuTree = dtree.render({\r\n");
      out.write("    elem: \"#menuTree\",\r\n");
      out.write("    dataStyle: \"layuiStyle\",  //使用layui风格的数据格式\r\n");
      out.write("    response: {message: \"msg\", statusCode: 0},  //修改response中返回数据的定义\r\n");
      out.write("    dataFormat: \"list\",  //配置data的风格为list\r\n");
      out.write("    url: \"");
      out.print(path);
      out.write("/menu/loadMenuManagerLeftTreeJson.action?spread=1\" // 使用url加载（可与data加载同时存在）\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //监听树的节点点击 事件\r\n");
      out.write("    dtree.on(\"node('menuTree')\", function (obj) {\r\n");
      out.write("    var id = obj.param.nodeId;\r\n");
      out.write("    window.parent.right.reloadTable(id);\r\n");
      out.write("    });\r\n");
      out.write("    });\r\n");
      out.write("    </script>\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
